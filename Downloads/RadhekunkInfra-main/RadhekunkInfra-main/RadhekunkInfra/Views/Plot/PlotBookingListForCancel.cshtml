@model RadhekunkInfra.Models.Plot

@{
    ViewBag.Title = "PlotBookingListForCancel";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    #divload {
        width: 100%;
        height: 100%;
        position: fixed;
        z-index: 9999;
        background: url("../files/assets/images/login-gif-11.gif") no-repeat center center rgba(0,0,0,0.25);
    }

    .errortext {
        border: 1px solid red !important;
    }
</style>
<div class="loader" id="divload"></div>

@using (Html.BeginForm("PlotBookingListForCancel", "Plot", FormMethod.Post, new { @id = "form1" }))
{



    <section class="section">
        <ul class="breadcrumb breadcrumb-style ">
            <li class="breadcrumb-item">
                <a href="#">
                    <i data-feather="home"></i>
                </a>
            </li>
            <li class="breadcrumb-item">Plot</li>
            <li class="breadcrumb-item">Cancel Plot</li>
        </ul>
    </section>


    <div class="section-body">
        <div class="col-12 col-md-12 col-lg-12">
            <div class="card">
                <div class="card-header">
                    <h4>Cancel Plot</h4>

                    <p style="color: red">
                        @TempData["Plot"]
                    </p>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                                Customer ID
                                @Html.TextBoxFor(m => m.UserID, new { @class = "form-control", @Placeholder = "Search by Customer ID" })
                                @Html.HiddenFor(m => m.CustomerID)
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                Associate ID
                                @Html.TextBoxFor(m => m.LoginId, new { @class = "form-control", @Placeholder = "Search by Associate ID" })
                                @Html.HiddenFor(m=>m.AssociateID)
                            </div>
                        </div>

                        <div class="col-md-3">
                            <div class="form-group">
                                From Date
                                @Html.TextBoxFor(m => m.FromDate, new { @class = "form-control", @Placeholder = "From Date", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                To Date
                                @Html.TextBoxFor(m => m.ToDate, new { @class = "form-control", @Placeholder = "To Date", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                Booking No
                                @Html.TextBoxFor(m => m.BookingNumber, new { @class = "form-control", @Placeholder = "Booking No" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                Select Site
                                @Html.DropDownListFor(m => m.SiteID, new SelectList(ViewBag.ddlSite, "Value", "Text"), new { @class = "form-control", @onchange = "return onSiteChange();" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                Select Phase
                                @Html.DropDownListFor(m => m.SectorID, new SelectList(ViewBag.ddlSector, "Value", "Text"), new { @class = "form-control", @onchange = "return onSectorChange();" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                Select Block
                                @Html.DropDownListFor(m => m.BlockID, new SelectList(ViewBag.ddlBlock, "Value", "Text"), new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                Plot Number
                                @Html.TextBoxFor(m => m.PlotNumber, new { @class = "form-control", @Placeholder = "PlotNumber" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <br />
                                <input class="btn btn-success" type="submit" value="Search" id="btnSearch" name="Search" />
                            </div>
                        </div>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-bordered table-md" data-page-length='50' id="tableExport" style="width:100%;">
                            <thead>
                                <tr>
                                    <th hidden>PK_BookingId</th>
                                    <th>S No.</th>
                                    <th>Booking No</th>
                                    <th>Branch</th>
                                    <th>Customer Name</th>
                                    <th>Associate Name</th>
                                    <th>Plot No.</th>
                                    <th>Booking Date</th>
                                    <th>Booking Amount</th>
                                    <th>Payment Plan</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null)
                                {
                                    if (Model.lstPlot != null)
                                    {
                                        int i = 1;
                                        foreach (var Item in Model.lstPlot)
                                        {
                                            <tr class="text-left">
                                                <td hidden>@Item.PK_BookingId</td>
                                                <td>@i</td>
                                                <td>@Item.BookingNumber</td>
                                                <td>@Item.BranchName</td>
                                                <td>@Item.CustomerName (@Item.CustomerLoginID)</td>
                                                <td>@Item.AssociateName (@Item.AssociateLoginID)</td>
                                                <td>@Item.PlotNumber</td>
                                                <td>@Item.BookingDate</td>
                                                <td>@Item.BookingAmount</td>
                                                <td>@Item.PaymentPlanID</td>
                                                <td>
                                                    @*<a href="/Plot/CancelPlotBooking?BookingID=@Item.PK_BookingId" class="btn btn-danger btn-sm" onclick = "return confirm('Are you sure you want to cancel this booking?');">Cancel</a>*@
                                                    <a href="#" class="btn btn-danger btn-sm" onclick="openCancelPopup('@Item.PK_BookingId');">Cancel</a>
                                                </td>
                                            </tr>
                                            i++;
                                        }
                                    }
                                }

                            </tbody>

                        </table>
                        @Html.HiddenFor(m => m.PK_BookingId)
                    </div>
                </div>
            </div>
        </div>
    </div>



    <!-- Popup for Cancel Remark -->
    <div class="modal fade" id="myModal" role="dialog" style="display: none;padding-top:55px;">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <h6 class="modal-title" style="color: red">REASON FOR CANCEL</h6>
                    <button type="button" class="close" data-dismiss="modal" onclick="closeModal();">&times;</button>

                </div>
                <div class="modal-body" style="color: black">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>Cancel Remark</label>
                                @Html.TextAreaFor(m => m.CancelRemark, new { @class = "form-control", @placeholder = "Remark for Cancellation" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                @*<a href="/Plot/CancelPlotBooking?BookingID=@Item.PK_BookingId" class="btn btn-danger btn-sm" onclick = "return confirm('Are you sure you want to cancel this booking?');">Cancel</a>*@
                                <input type="button" class="btn btn-sm btn-danger pull-right" onclick="return cancelBooking()" value="Cancel Booking" />
                            </div>
                        </div>
                    </div>
                </div>
                @*<div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal" onclick="closeModal();">Close</button>
                    </div>*@
            </div>

        </div>
    </div>
    <!-- Popup for Cancel Remark -->

}

<script src="~/files/bower_components/jquery/js/jquery.min.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<link rel="stylesheet" type="text/css" href="https://code.jquery.com/ui/1.12.0/themes/smoothness/jquery-ui.css">


<script>

    $(document).ready(function () {
        $("#divload").css({ 'display': 'none' });
        var cityuse = [];
        $("#loader").css({ 'display': '' });
        $.ajax({
            url: '/Plot/CustomerListForAutoSearch',
            type: 'Post',
            success: function (response) {
                if (response != null) {
                    $(response).each(function (index, item) {
                        cityuse.push(item.UserName + "(" + item.LoginIDD + ")");
                    });
                    debugger
                    $('#UserID').autocomplete({
                        source: cityuse,
                        select: function (event, ui) {
                            var str = ui.item.label;
                            var strsplit = str.split("(");
                            $('#CustomerID').val(strsplit[1].substr(0, strsplit[1].length - 1));
                        }
                    })
                }
            }, error: function () {
                alert('Some Thing wrong!');
                $("#loader").css({ 'display': 'none' });
            }
        });
        var AssociateList = [];
        $("#loader").css({ 'display': '' });
        $.ajax({
            url: '/Plot/GetUserList',
            type: 'Post',
            success: function (response) {
                if (response != null) {
                    $(response).each(function (index, item) {
                        AssociateList.push(item.UserName + "(" + item.LoginIDD + ")");
                    });
                    debugger
                    $('#LoginId').autocomplete({
                        source: AssociateList,
                        select: function (event, ui) {
                            var str = ui.item.label;
                            var strsplit = str.split("(");

                            $('#AssociateID').val(strsplit[1].substr(0, strsplit[1].length - 1));
                        }
                    })
                    $('#BookingNumber').autocomplete({
                        source: cityuse,
                        select: function (event, ui) {
                            var str = ui.item.label;
                            var strsplit = str.split("(");
                            $('#AssociateID').val(strsplit[1].substr(0, strsplit[1].length - 1));
                        }
                    })
                    //$('#PlotNumber').autocomplete({
                    //    source: cityuse,
                    //    select: function (event, ui) {
                    //        var str = ui.item.label;
                    //        var strsplit = str.split("(");
                    //        $('#AssociateID').val(strsplit[1].substr(0, strsplit[1].length - 1));
                    //    }
                    //})
                }
            }, error: function () {
                alert('Some Thing wrong!');
                $("#loader").css({ 'display': 'none' });
            }
        });
    });

    function openCancelPopup(bookingID) {
        $("#PK_BookingId").val(bookingID);
        $("#myModal").modal('show');
    }

    function closeModal() {
        $("#myModal").hide();
        //$('body').removeClass().removeAttr('style'); $('.modal-backdrop').remove();
    }

    function cancelBooking() {
        $(".errortext").removeClass("errortext");
        if ($('#CancelRemark').val() == '') {
            $("#CancelRemark").addClass('errortext');
            $('#CancelRemark').focus();
            return false;
        }
        var r = confirm('Are you sure you want to cancel this Booking ?');
        if (r == true) {
            //$("#divload").css({ 'display': '' });
            $.ajax({
                url: "/Plot/CancelPlotBooking",
                Type: "Get",
                DataType: "JSON",
                data: { BookingID: $("#PK_BookingId").val(), Remark: $("#CancelRemark").val() },
                success: function (data) {
                    alert("Booking has been cancelled.");
                    window.location.href = '@Url.Action("PlotBookingListForCancel", "Plot")';

                }

            });
        }
    }


    function EditPlot() {
        $.ajax({
            url: "/Plot/UpdatePlotBooking",
            Type: "Get",
            DataType: "JSON",
            data: { PK_BookingId: $("#PK_BookingId").val() },
            success: function (data) {
                //   alert(data.Result);
                window.location.href = '@Url.Action("PlotBooking", "Plot")';

            }

        });
    }

    function CancelPlot() {
        $.ajax({
            url: "/Plot/CancelPlotBooking",
            Type: "Get",
            DataType: "JSON",
            data: { PK_BookingId: $("#PK_BookingId").val() },
            success: function (data) {
                //     alert(data.Result);
                window.location.href = '@Url.Action("PlotBooking", "Plot")';

            }

        });
    }

    function onSiteChange() {
        $("#divload").css({ 'display': '' });
        var value = $('#SiteID').val();
        var values = $('#SectorID').val();
        var tr = [];
        $.ajax({
            url: "/Plot/GetSiteDetails",
            Type: "Get",
            DataType: "JSON",
            data: { SiteID: value },
            success: function (data) {
                $("#divload").css({ 'display': 'none' });
                var j = 1;
                if (data.Result == "yes") {
                    $('#Rate').val(data.Rate);
                    $("#SectorID").html(""); // clear before appending new list
                    $("#SectorID").empty();
                    $("#SectorID").append(
                          $('<option></option>').val(0).html('Select Phase'));
                    $.each(data.ddlSector, function (index, Sectorcount) {
                        $("#SectorID").append(
                              $('<option></option>').val(Sectorcount.Value).html(Sectorcount.Text));

                    });

                }
                else {
                    $("#SectorID").empty();
                    $('#Rate').val('');
                }


            }

        });
    }

    function onSectorChange() {

        $("#divload").css({ 'display': '' });
        var siteID = $('#SiteID').val();
        var sectorID = $('#SectorID').val();
        $.ajax({
            url: '/Plot/GetBlockList', type: 'post', dataType: 'json',
            data: { 'SiteID': siteID, 'sectorID': sectorID },
            success: function (data) {
                $("#divload").css({ 'display': 'none' });
                $("#BlockID").html(""); // clear before appending new list
                $("#BlockID").empty();
                $("#BlockID").append(
                      $('<option></option>').val(0).html('Select Block'));
                $.each(data.lstBlock, function (index, BlockCount) {
                    $("#BlockID").append(
                          $('<option></option>').val(BlockCount.Value).html(BlockCount.Text));
                });

            }

        });
    }



</script>
<script>

    $('#FromDate').datepicker({
        dateFormat: 'dd/mm/yy',
        maxDate: 0,
        changeYear: true,
        changeMonth: true
    });
    $('#ToDate').datepicker({
        dateFormat: 'dd/mm/yy',
        changeYear: true,
        changeMonth: true,
        minDate: new Date(new Date().setMonth(new Date().getMonth() - 2))
    });


</script>
<style>
    .errortext {
        border: 1px solid red !important;
        background-color: #fff0f0 !important;
    }
</style>



