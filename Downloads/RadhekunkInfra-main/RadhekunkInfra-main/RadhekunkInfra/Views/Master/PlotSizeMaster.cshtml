@model RadhekunkInfra.Models.Master

@{
    ViewBag.Title = "PlotSizeMaster";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm("PlotSizeMaster", "Master", FormMethod.Post, new { @id = "form1" }))
{
    <section class="section">
        <ul class="breadcrumb breadcrumb-style ">
            <li class="breadcrumb-item">
                <a href="#">
                    <i data-feather="home"></i>
                </a>
            </li>
            <li class="breadcrumb-item">Master</li>
            <li class="breadcrumb-item">Plot Size Master</li>
        </ul>
    </section>
   
    <div class="section-body">
        <div class="col-12 col-md-12 col-lg-12">
            <div class="card">
                <div class="card-header">
                    <h4>Plot Size Master</h4>


                    <p style="color: red">
                        @TempData["PlotSize"]
                    </p>
                </div>
                <div class="card-body">
                    <div class="row ">
                        <div class="input-field col m6 s12">
                            Width In Feet<span style="color:red">*</span>
                            @Html.TextBoxFor(m => m.WidthFeet, new { @class = "form-control", @onchange = "return calculatePlotArea();", @onkeypress = "return isNumberOrDecimal(event);", maxlength = "50", @placeholder = "Enter Width in Feet" })


                        </div>

                        <div class="input-field col m6 s12">
                            Width In Inches<span style="color:red">*</span>
                            @Html.TextBoxFor(m => m.WidthInch, new { @class = "form-control", @onblur = "return calculatePlotArea();", @onkeypress = "return isNumberOrDecimal(event);", maxlength = "50", @placeholder = "Enter  width  in inches" })


                        </div>


                    </div>

                    <div class="row">
                        <div class="input-field col m6 s12">
                            Height In Feet<span style="color:red">*</span>
                            @Html.TextBoxFor(m => m.HeightFeet, new { @class = "form-control", @onblur = "return calculatePlotArea();", @onkeypress = "return isNumberOrDecimal(event);", maxlength = "50", @placeholder = "Enter  Height in Feet" })
                            <span class="form-bar"></span>
                        </div>
                        <div class="input-field col m6 s12">
                            Height In Inches<span style="color:red">*</span>
                            @Html.TextBoxFor(m => m.HeightInch, new { @class = "form-control", @onblur = "return calculatePlotArea();", @onkeypress = "return isNumberOrDecimal(event);", maxlength = "50", @placeholder = "Enter  Height in Inches" })
                            <span class="form-bar"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="input-field col m6 s12">
                            Plot Area<span style="color:red">*</span>
                            @Html.TextBoxFor(m => m.PlotArea, new { @class = "form-control", @ReadOnly = "ReadOnly", @Placeholder = "Plot Area", @onkeypress = "return isNumberOrDecimal(event);" })
                            <span class="form-bar"></span>
                        </div>
                        <div class="input-field col m6 s12">
                            Unit<span style="color:red">*</span>
                            @Html.DropDownListFor(m => m.UnitID, new SelectList(ViewBag.ddlUnit, "Value", "Text"), new { @class = "form-control" })
                            <span class="form-bar"></span>
                        </div>
                    </div>

                    <br />

                    <div class="row">

                        <div class="input-field col m6 s12">
                            @if (Model.PlotSizeID == null)
                {
                                <input class="btn btn-success pull-left" type="submit" onclick="return validateform();" value="Save" id="btnSave" name="btnSave" />
                            }
                            else
                            {
                                @Html.HiddenFor(m => m.PlotSizeID, new { @Value = @Model.PlotSizeID })
                                <input class="btn btn-success pull-left" type="submit" onclick="return validateform();" value="Update" id="btnUpdate" name="btnUpdate" />
                            }
                            <input type="hidden" id="UserType" value="@Session["UserType"]" />
                            <input type="hidden" id="UserTypeName" value="@Session["UserTypeName"]" />
                            <a class="btn btn-info" href="/Master/PlotSizeList" style="margin-left:5px">Back To List</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script src="~/files/bower_components/jquery/js/jquery.min.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<link rel="stylesheet" type="text/css" href="https://code.jquery.com/ui/1.12.0/themes/smoothness/jquery-ui.css">
<script>
    $(document).ready(function () {
        $("#divload").css({ 'display': 'none' });
        var UserType = $('#UserType').val();
        var UserTypeName = $('#UserTypeName').val();
        if (UserType == 'Admin' && UserTypeName != 'Admin' && UserTypeName != "") {
            GetMenuDetails();
        }
    });
    function GetMenuDetails() {
        debugger
        var URL = "/Master/PlotSizeMaster";
        $.ajax({
            type: "POST",
            url: "/Master/GetMenuDetails",
            data: { URL: URL },
            dataType: "json",
            //contentType: 'application/json; charset=utf-8',
            success: function (data) {
                var obj = jQuery.parseJSON(data);
                console.log(obj)
                for (var i = 0; i < obj.length; i++) {
                    if (obj[i].FormSave == true) {
                        $('#btnSave').show();

                        $("#btnSave").removeAttr('disabled');
                    }
                    else {
                        $('#btnSave').hide();

                        $("#btnSave").attr('disabled', 'disabled');
                    }
                    debugger
                    if (obj[i].FormUpdate == true && $('#PlotSizeID').val() != "") {
                        $('#btnUpdate').show();

                        $("#btnUpdate").removeAttr('disabled');
                    }
                    else {
                        $('#btnUpdate').hide();
                        $("#btnUpdate").attr('disabled', 'disabled');
                    }
                }
            },
            error: function () {
                alert("Error occured!!")
            }
        });
    }
    function calculatePlotArea() {
        var widthFeet = Number($('#WidthFeet').val());
        var widthInch = Number($('#WidthInch').val());
        var totalWidth = widthFeet + (widthInch / 12);

        var heightFeet = Number($('#HeightFeet').val());
        var heightInch = Number($('#HeightInch').val());
        var totalHeight = heightFeet + (heightInch / 12);

        document.getElementById("PlotArea").value = totalHeight * totalWidth;
    }

    function validateform() {
        $("#divload").css({ 'display': '' });
        $(".errortext").removeClass("errortext");
        if ($('#WidthFeet').val() == '') {
            $("#WidthFeet").addClass('errortext');
            $('#WidthFeet').focus();
            return false;
        }
        if ($('#WidthInch').val() == '') {
            $("#WidthInch").addClass('errortext');
            $('#WidthInch').focus();
            return false;
        }
        if ($('#HeightFeet').val() == '') {
            $("#HeightFeet").addClass('errortext');
            $('#HeightFeet').focus();
            return false;
        }
        if ($('#HeightInch').val() == '') {
            $("#HeightInch").addClass('errortext');
            $('#HeightInch').focus();
            return false;
        }
        if ($('#PlotArea').val() == '') {
            $("#PlotArea").addClass('errortext');
            $('#PlotArea').focus();
            return false;
        }
        if ($('#UnitID').val() == '0') {
            $("#UnitID").addClass('errortext');
            $('#UnitID').focus();
            return false;
        }

        return true;
    }

    function isNumberOrDecimal(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    function onlyAlphabets(e, t) {
        try {
            if (window.event) {
                var charCode = window.event.keyCode;
            }
            else if (e) {
                var charCode = e.which;
            }
            else { return true; }
            if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123))
                return true;
            else
                return false;
        }
        catch (err) {
            alert(err.Description);
        }
    }

</script>


<style>
    .errortext {
        border: 1px solid red !important;
        background-color: #fff0f0 !important;
    }
</style>


